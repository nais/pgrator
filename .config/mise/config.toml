[env]
_.source = ".config/mise/extract_env.sh"
PGRATOR_IMAGE = "europe-north1-docker.pkg.dev/nais-io/nais/images/pgrator:latest"
PGRATOR_TTL_IMAGE = "ttl.sh/pgrator:1h"


[tools]
golangci-lint = "2.4.0"
kube-controller-tools = "0.19.0"
kubebuilder = "4.9.0"
setup-envtest = """
{%- set tool = '"\\ssigs.k8s.io/controller-runtime\\s"' -%}
{%- set version_fmt = '"%d.%d"' -%}
{%- set command = "grep " ~ tool ~ " " ~ config_root ~ "/../../go.mod | awk -F. '{printf " ~ version_fmt ~ ", $3, $4}'" -%}

{{- exec(cache_key="setup-envtest", command=command) -}}
"""
tilt = "latest"

##@ Development

[tasks.generate]
description = "Generate code containing DeepCopy, DeepCopyInto, and DeepCopyObject method implementations."
run = 'controller-gen +object paths="./..."'

[tasks.fmt]
description = "Run go fmt against code."
run = "go fmt ./..."

[tasks.vet]
description = "Run go vet against code."
run = "go vet ./..."

[tasks.test]
depends = ["generate", "fmt", "vet"]
description = "Run tests."
run = """
#!/usr/bin/env bash
KUBEBUILDER_ASSETS="$(setup-envtest use ${ENVTEST_K8S_VERSION} -p path)"
export KUBEBUILDER_ASSETS
go test $(go list ./...) -coverprofile cover.out
"""

[tasks.lint]
description = "Run golangci-lint linter"
run = "golangci-lint run"

[tasks.lint-fix]
description = "Run golangci-lint linter and perform fixes"
run = "golangci-lint run --fix"

[tasks.lint-config]
description = "Verify golangci-lint linter configuration"
run = "golangci-lint config verify"

###@ Build

[tasks.build]
depends = ["fmt", "vet"]
description = "Build manager binary."
run = "go build -o bin/manager cmd/main.go"

[tasks.run]
depends = ["fmt", "vet"]
description = "Run a controller from your host."
run = "go run ./cmd/main.go"

[tasks.docker-build]
description = "Build docker image for the manager"
run = "docker buildx build --load --tag ${PGRATOR_IMAGE} ."

[tasks._builder]
hide = true
run = "docker buildx create --name pgrator-builder --node pgrator-builder0"

[tasks._cleanup_builder]
hide = true
run = "docker buildx rm pgrator-builder"

[tasks.docker-multi]
description= "Build and push docker image for the manager for cross-platform support"
depends = ["_builder"]
depends_post = ["_cleanup_builder"]
run = "docker buildx build --builder pgrator-builder --push --platform=linux/arm64,linux/amd64 --tag ${PGRATOR_TTL_IMAGE} ."
